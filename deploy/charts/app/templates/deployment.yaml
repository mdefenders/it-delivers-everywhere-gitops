{{- range $name, $svc := .Values.services }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
spec:
  replicas: {{ $svc.replicas }}
  selector:
    matchLabels:
      app: {{ $name }}
  template:
    metadata:
      labels:
        app: {{ $name }}
        tag: {{ $svc.tag }}
    spec:
      containers:
        - name: {{ $name }}
          image: '{{ $svc.image }}:{{ $svc.tag }}'
          ports:
            - containerPort: {{ $.Values.port }}
          env:
            - name: SERVICE_TYPE
              value: "frontend"
            - name: SERVICE_BRANCH
              value: {{ $.Values.branch | default "default" | quote }}
            - name: SERVICE_NAME
              value: {{ $name | replace "-" "_" | upper }}_BACK
          livenessProbe:
            httpGet:
              path: /health
              port: {{ $.Values.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: {{ $.Values.port }}
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}-back
spec:
  replicas: {{ $svc.replicas }}
  selector:
    matchLabels:
      app: {{ $name }}-back
  template:
    metadata:
      labels:
        app: {{ $name }}-back
        tag: {{ $svc.tag }}
    spec:
      containers:
        - name: {{ $name }}
          image: '{{ $svc.image }}:{{ $svc.tag }}'
          ports:
            - containerPort: {{ $.Values.port }}
          env:
            - name: MYSQL_HOST
              value: {{ $.Values.mysqlHost | quote }}
            - name: MYSQL_USER
              value: {{ $.Values.mysqlUser | default "admin" | quote }}
            - name: SERVICE_TYPE
              value: "backend"
            - name: SERVICE_BRANCH
              value: {{ $.Values.branch | default "default" | quote }}
            - name: MYSQL_PASSWORD_FILE
              value: {{ $.Values.secretPath }}/{{ $.Values.secretName }}
          livenessProbe:
            httpGet:
              path: /health
              port: {{ $.Values.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: {{ $.Values.port }}
            initialDelaySeconds: 5
            periodSeconds: 5
{{- if $.Values.secProviderEnabled }}
          volumeMounts:
            - name: secrets-store-inline
              mountPath: {{ $.Values.secretPath }}
              readOnly: true
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: oci-vault-db-password
{{- end }}
{{- end }}